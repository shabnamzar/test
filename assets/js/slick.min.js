!function (i) { "use strict"; "function" == typeof define && define.amd ? define(["jquery"], i) : "undefined" != typeof exports ? module.exports = i(require("jquery")) : i(jQuery) }(function (a) { "use strict"; var o, r = window.Slick || {}; o = 0, (r = function (i, e) { var t, s = this; s.defaults = { accessibility: !0, adaptiveHeight: !1, appendArrows: a(i), appendDots: a(i), arrows: !0, asNavFor: null, prevArrow: '<button class="slick-prev" aria-label="Previous" type="button">Previous</button>', nextArrow: '<button class="slick-next" aria-label="Next" type="button">Next</button>', autoplay: !1, autoplaySpeed: 3e3, centerMode: !1, centerPadding: "50px", slidesMargin: 30, cssEase: "ease", customPaging: function (i, e) { return a('<button type="button" />').text(e + 1) }, dots: !1, dotsClass: "slick-dots", draggable: !0, easing: "linear", edgeFriction: .35, fade: !1, focusOnSelect: !1, focusOnChange: !1, infinite: !0, initialSlide: 0, lazyLoad: "ondemand", mobileFirst: !1, pauseOnHover: !0, pauseOnFocus: !0, pauseOnDotsHover: !1, respondTo: "window", responsive: null, rows: 1, rtl: !1, slide: "", slidesPerRow: 1, slidesToShow: 1, slidesToScroll: 1, speed: 500, swipe: !0, swipeToSlide: !0, touchMove: !0, touchThreshold: 5, useCSS: !0, useTransform: !0, variableWidth: !1, vertical: !1, verticalSwiping: !1, waitForAnimate: !0, zIndex: 1e3 }, s.initials = { animating: !1, dragging: !1, autoPlayTimer: null, currentDirection: 0, currentLeft: null, currentSlide: 0, direction: 1, $dots: null, listWidth: null, listHeight: null, loadIndex: 0, $nextArrow: null, $prevArrow: null, scrolling: !1, slideCount: null, slideWidth: null, $slideTrack: null, $slides: null, sliding: !1, slideOffset: 0, swipeLeft: null, swiping: !1, $list: null, touchObject: {}, transformsEnabled: !1, unslicked: !1 }, a.extend(s, s.initials), s.activeBreakpoint = null, s.animType = null, s.animProp = null, s.breakpoints = [], s.breakpointSettings = [], s.cssTransitions = !1, s.focussed = !1, s.interrupted = !1, s.hidden = "hidden", s.paused = !0, s.positionProp = null, s.respondTo = null, s.rowCount = 1, s.shouldClick = !0, s.$slider = a(i), s.$slidesCache = null, s.transformType = null, s.transitionType = null, s.visibilityChange = "visibilitychange", s.windowWidth = 0, s.windowTimer = null, t = a(i).data("slick") || {}, s.options = a.extend({}, s.defaults, e, t), !0 === s.options.fade && (s.options.slidesMargin = 0), !0 === s.options.vertical && (s.options.variableWidth = !1), s.currentSlide = s.options.initialSlide, s.originalSettings = s.options, void 0 !== document.mozHidden ? (s.hidden = "mozHidden", s.visibilityChange = "mozvisibilitychange") : void 0 !== document.webkitHidden && (s.hidden = "webkitHidden", s.visibilityChange = "webkitvisibilitychange"), s.autoPlay = a.proxy(s.autoPlay, s), s.autoPlayClear = a.proxy(s.autoPlayClear, s), s.autoPlayIterator = a.proxy(s.autoPlayIterator, s), s.changeSlide = a.proxy(s.changeSlide, s), s.clickHandler = a.proxy(s.clickHandler, s), s.selectHandler = a.proxy(s.selectHandler, s), s.setPosition = a.proxy(s.setPosition, s), s.swipeHandler = a.proxy(s.swipeHandler, s), s.dragHandler = a.proxy(s.dragHandler, s), s.keyHandler = a.proxy(s.keyHandler, s), s.instanceUid = o++ , s.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/, s.registerBreakpoints(), s.init(!0) }).prototype.activateADA = function () { this.$slideTrack.find(".slick-active").attr({ "aria-hidden": "false" }).find("a, input, button, select").attr({ tabindex: "0" }) }, r.prototype.addSlide = r.prototype.slickAdd = function (i, e, t) { var s = this; if ("boolean" == typeof e) t = e, e = null; else if (e < 0 || e >= s.slideCount) return !1; s.unload(), "number" == typeof e ? 0 === e && 0 === s.$slides.length ? a(i).appendTo(s.$slideTrack) : t ? a(i).insertBefore(s.$slides.eq(e)) : a(i).insertAfter(s.$slides.eq(e)) : !0 === t ? a(i).prependTo(s.$slideTrack) : a(i).appendTo(s.$slideTrack), s.$slides = s.$slideTrack.children(this.options.slide), s.$slideTrack.children(this.options.slide).detach(), s.$slideTrack.append(s.$slides), s.$slides.each(function (i, e) { a(e).attr("data-slick-index", i) }), s.$slidesCache = s.$slides, s.reinit() }, r.prototype.animateHeight = function () { var i, e = this; 1 === e.options.slidesToShow && !0 === e.options.adaptiveHeight && !1 === e.options.vertical && (i = e.$slides.eq(e.currentSlide).outerHeight(!0), e.$list.animate({ height: i }, e.options.speed)) }, r.prototype.animateSlide = function (i, e) { var t = {}, s = this; s.animateHeight(), !0 === s.options.rtl && !1 === s.options.vertical && (i = -i), !1 === s.transformsEnabled ? !1 === s.options.vertical ? s.$slideTrack.animate({ left: i }, s.options.speed, s.options.easing, e) : s.$slideTrack.animate({ top: i }, s.options.speed, s.options.easing, e) : !1 === s.cssTransitions ? (!0 === s.options.rtl && (s.currentLeft = -s.currentLeft), a({ animStart: s.currentLeft }).animate({ animStart: i }, { duration: s.options.speed, easing: s.options.easing, step: function (i) { i = Math.ceil(i), !1 === s.options.vertical ? t[s.animType] = "translate(" + i + "px, 0px)" : t[s.animType] = "translate(0px," + i + "px)", s.$slideTrack.css(t) }, complete: function () { e && e.call() } })) : (s.applyTransition(), i = Math.ceil(i), !1 === s.options.vertical ? t[s.animType] = "translate3d(" + i + "px, 0px, 0px)" : t[s.animType] = "translate3d(0px," + i + "px, 0px)", s.$slideTrack.css(t), e && setTimeout(function () { s.disableTransition(), e.call() }, s.options.speed)) }, r.prototype.getNavTarget = function () { var i = this.options.asNavFor; return i && null !== i && (i = a(i).not(this.$slider)), i }, r.prototype.asNavFor = function (e) { var i = this.getNavTarget(); null !== i && "object" == typeof i && i.each(function () { var i = a(this).slick("getSlick"); i.unslicked || i.slideHandler(e, !0) }) }, r.prototype.applyTransition = function (i) { var e = this, t = {}; !1 === e.options.fade ? t[e.transitionType] = e.transformType + " " + e.options.speed + "ms " + e.options.cssEase : t[e.transitionType] = "opacity " + e.options.speed + "ms " + e.options.cssEase, !1 === e.options.fade ? e.$slideTrack.css(t) : e.$slides.eq(i).css(t) }, r.prototype.autoPlay = function () { var i = this; i.autoPlayClear(), i.slideCount > i.options.slidesToShow && (i.autoPlayTimer = setInterval(i.autoPlayIterator, i.options.autoplaySpeed)) }, r.prototype.autoPlayClear = function () { this.autoPlayTimer && clearInterval(this.autoPlayTimer) }, r.prototype.autoPlayIterator = function () { var i = this, e = i.currentSlide + i.options.slidesToScroll; i.paused || i.interrupted || i.focussed || (!1 === i.options.infinite && (1 === i.direction && i.currentSlide + 1 === i.slideCount - 1 ? i.direction = 0 : 0 === i.direction && (e = i.currentSlide - i.options.slidesToScroll, i.currentSlide - 1 == 0 && (i.direction = 1))), i.slideHandler(e)) }, r.prototype.buildArrows = function () { var i = this; !0 === i.options.arrows && (i.$prevArrow = a(i.options.prevArrow).addClass("slick-arrow"), i.$nextArrow = a(i.options.nextArrow).addClass("slick-arrow"), i.slideCount > i.options.slidesToShow ? (i.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), i.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), i.htmlExpr.test(i.options.prevArrow) && i.$prevArrow.prependTo(i.options.appendArrows), i.htmlExpr.test(i.options.nextArrow) && i.$nextArrow.appendTo(i.options.appendArrows), !0 !== i.options.infinite && i.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true")) : i.$prevArrow.add(i.$nextArrow).addClass("slick-hidden").attr({ "aria-disabled": "true", tabindex: "-1" })) }, r.prototype.buildDots = function () { var i, e, t = this; if (!0 === t.options.dots && t.slideCount > t.options.slidesToShow) { for (t.$slider.addClass("slick-dotted"), e = a("<ul />").addClass(t.options.dotsClass), i = 0; i <= t.getDotCount(); i += 1)e.append(a("<li />").append(t.options.customPaging.call(this, t, i))); t.$dots = e.appendTo(t.options.appendDots), t.$dots.find("li").first().addClass("slick-active") } }, r.prototype.buildOut = function () { var i = this; i.$slides = i.$slider.children(i.options.slide + ":not(.slick-cloned)").addClass("slick-slide"), i.slideCount = i.$slides.length, i.$slides.each(function (i, e) { a(e).attr("data-slick-index", i).data("originalStyling", a(e).attr("style") || "") }), i.$slider.addClass("slick-slider"), 1 === i.options.slidesToShow && (i.options.centerMode = !1), 1 == i.options.centerMode && i.$slider.addClass("slick-center-mode"), i.$slideTrack = 0 === i.slideCount ? a('<div class="slick-track"/>').appendTo(i.$slider) : i.$slides.wrapAll('<div class="slick-track"/>').parent(), i.$list = i.$slideTrack.wrap('<div class="slick-list"/>').parent(), i.$slideTrack.css("opacity", 0), !0 !== i.options.centerMode && !0 !== i.options.swipeToSlide || (i.options.slidesToScroll = 1), a("img[data-lazy]", i.$slider).not("[src]").addClass("slick-loading"), i.setupInfinite(), i.buildArrows(), i.buildDots(), i.updateDots(), i.setSlideClasses("number" == typeof i.currentSlide ? i.currentSlide : 0), !0 === i.options.draggable && i.$list.addClass("draggable") }, r.prototype.buildRows = function () { var i, e, t, s, o = this, n = document.createDocumentFragment(), r = o.$slider.children(); if (1 < o.options.rows) { for (s = o.options.slidesPerRow * o.options.rows, t = Math.ceil(r.length / s), i = 0; i < t; i++) { for (var l = document.createElement("div"), d = 0; d < o.options.rows; d++) { var a = document.createElement("div"); for (a.className = "row-item", e = 0; e < o.options.slidesPerRow; e++) { var c = i * s + (d * o.options.slidesPerRow + e); r.get(c) && a.appendChild(r.get(c)) } l.appendChild(a) } n.appendChild(l) } o.$slider.empty().append(n), o.$slider.children().children().children().css({ width: 100 / o.options.slidesPerRow + "%", display: "inline-block" }) } }, r.prototype.checkResponsive = function (i, e) { var t, s, o, n = this, r = !1, l = n.$slider.width(), d = window.innerWidth || a(window).width(); if ("window" === n.respondTo ? o = d : "slider" === n.respondTo ? o = l : "min" === n.respondTo && (o = Math.min(d, l)), n.options.responsive && n.options.responsive.length && null !== n.options.responsive) { for (t in s = null, n.breakpoints) n.breakpoints.hasOwnProperty(t) && (!1 === n.originalSettings.mobileFirst ? o < n.breakpoints[t] && (s = n.breakpoints[t]) : o > n.breakpoints[t] && (s = n.breakpoints[t])); null !== s ? null !== n.activeBreakpoint && s === n.activeBreakpoint && !e || (n.activeBreakpoint = s, "unslick" === n.breakpointSettings[s] ? n.unslick(s) : (n.options = a.extend({}, n.originalSettings, n.breakpointSettings[s]), !0 === i && (n.currentSlide = n.options.initialSlide), n.refresh(i)), r = s) : null !== n.activeBreakpoint && (n.activeBreakpoint = null, n.options = n.originalSettings, !0 === i && (n.currentSlide = n.options.initialSlide), n.refresh(i), r = s), i || !1 === r || n.$slider.trigger("breakpoint", [n, r]) } }, r.prototype.changeSlide = function (i, e) { var t, s, o = this, n = a(i.currentTarget); switch (n.is("a") && i.preventDefault(), n.is("li") || (n = n.closest("li")), t = o.slideCount % o.options.slidesToScroll != 0 ? 0 : (o.slideCount - o.currentSlide) % o.options.slidesToScroll, i.data.message) { case "previous": s = 0 == t ? o.options.slidesToScroll : o.options.slidesToShow - t, o.slideCount > o.options.slidesToShow && o.slideHandler(o.currentSlide - s, !1, e); break; case "next": s = 0 == t ? o.options.slidesToScroll : t, o.slideCount > o.options.slidesToShow && o.slideHandler(o.currentSlide + s, !1, e); break; case "index": var r = 0 === i.data.index ? 0 : i.data.index || n.index() * o.options.slidesToScroll; o.slideHandler(o.checkNavigable(r), !1, e), n.children().trigger("focus"); break; default: return } }, r.prototype.checkNavigable = function (i) { var e = this.getNavigableIndexes(), t = 0; if (i > e[e.length - 1]) i = e[e.length - 1]; else for (var s in e) { if (i < e[s]) { i = t; break } t = e[s] } return i }, r.prototype.cleanUpEvents = function () { var i = this; i.options.dots && null !== i.$dots && (a("li", i.$dots).off("click.slick", i.changeSlide).off("mouseenter.slick", a.proxy(i.interrupt, i, !0)).off("mouseleave.slick", a.proxy(i.interrupt, i, !1)), !0 === i.options.accessibility && i.$dots.off("keydown.slick", i.keyHandler)), i.$slider.off("focus.slick blur.slick"), !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow && i.$prevArrow.off("click.slick", i.changeSlide), i.$nextArrow && i.$nextArrow.off("click.slick", i.changeSlide), !0 === i.options.accessibility && (i.$prevArrow && i.$prevArrow.off("keydown.slick", i.keyHandler), i.$nextArrow && i.$nextArrow.off("keydown.slick", i.keyHandler))), i.$list.off("touchstart.slick mousedown.slick", i.swipeHandler), i.$list.off("touchmove.slick mousemove.slick", i.swipeHandler), i.$list.off("touchend.slick mouseup.slick", i.swipeHandler), i.$list.off("touchcancel.slick mouseleave.slick", i.swipeHandler), i.$list.off("click.slick", i.clickHandler), a(document).off(i.visibilityChange, i.visibility), i.cleanUpSlideEvents(), !0 === i.options.accessibility && i.$list.off("keydown.slick", i.keyHandler), !0 === i.options.focusOnSelect && a(i.$slideTrack).children().off("click.slick", i.selectHandler), a(window).off("orientationchange.slick.slick-" + i.instanceUid, i.orientationChange), a(window).off("resize.slick.slick-" + i.instanceUid, i.resize), a("[draggable!=true]", i.$slideTrack).off("dragstart", i.preventDefault), a(window).off("load.slick.slick-" + i.instanceUid, i.setPosition) }, r.prototype.cleanUpSlideEvents = function () { var i = this; i.$list.off("mouseenter.slick", a.proxy(i.interrupt, i, !0)), i.$list.off("mouseleave.slick", a.proxy(i.interrupt, i, !1)) }, r.prototype.cleanUpRows = function () { var i; 0 < this.options.rows && this.$slider.find(".row-item").length && ((i = this.$slides.children().children()).removeAttr("style"), i.removeClass("first-slick last-slick"), this.$slider.empty().append(i)) }, r.prototype.clickHandler = function (i) { !1 === this.shouldClick && (i.stopImmediatePropagation(), i.stopPropagation(), i.preventDefault()) }, r.prototype.destroy = function (i) { var e = this; e.autoPlayClear(), e.touchObject = {}, e.cleanUpEvents(), a(".slick-cloned", e.$slider).detach(), e.$dots && e.$dots.remove(), e.$prevArrow && e.$prevArrow.length && (e.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.remove()), e.$nextArrow && e.$nextArrow.length && (e.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.remove()), e.$slides && (e.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function () { a(this).attr("style", a(this).data("originalStyling")) }), e.$slideTrack.children(this.options.slide).detach(), e.$slideTrack.detach(), e.$list.detach(), e.$slider.append(e.$slides)), e.cleanUpRows(), e.$slider.removeClass("slick-slider"), e.$slider.removeClass("slick-center-mode"), e.$slider.removeClass("slick-initialized"), e.$slider.removeClass("slick-dotted"), e.unslicked = !0, i || e.$slider.trigger("destroy", [e]) }, r.prototype.disableTransition = function (i) { var e = {}; e[this.transitionType] = "", !1 === this.options.fade ? this.$slideTrack.css(e) : this.$slides.eq(i).css(e) }, r.prototype.fadeSlide = function (i, e) { var t = this; !1 === t.cssTransitions ? (t.$slides.eq(i).css({ zIndex: t.options.zIndex }), t.$slides.eq(i).animate({ opacity: 1 }, t.options.speed, t.options.easing, e)) : (t.applyTransition(i), t.$slides.eq(i).css({ opacity: 1, zIndex: t.options.zIndex }), e && setTimeout(function () { t.disableTransition(i), e.call() }, t.options.speed)) }, r.prototype.fadeSlideOut = function (i) { var e = this; !1 === e.cssTransitions ? e.$slides.eq(i).animate({ opacity: 0, zIndex: e.options.zIndex - 2 }, e.options.speed, e.options.easing) : (e.applyTransition(i), e.$slides.eq(i).css({ opacity: 0, zIndex: e.options.zIndex - 2 })) }, r.prototype.filterSlides = r.prototype.slickFilter = function (i) { var e = this; null !== i && (e.$slidesCache = e.$slides, e.unload(), e.$slideTrack.children(this.options.slide).detach(), e.$slidesCache.filter(i).appendTo(e.$slideTrack), e.reinit()) }, r.prototype.focusHandler = function () { var t = this; t.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick", "*", function (i) { i.stopImmediatePropagation(); var e = a(this); setTimeout(function () { t.options.pauseOnFocus && (t.focussed = e.is(":focus"), t.autoPlay()) }, 0) }) }, r.prototype.getCurrent = r.prototype.slickCurrentSlide = function () { return this.currentSlide }, r.prototype.getDotCount = function () { var i = this, e = 0, t = 0, s = 0; if (!0 === i.options.infinite) if (i.slideCount <= i.options.slidesToShow)++s; else for (; e < i.slideCount;)++s, e = t + i.options.slidesToScroll, t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow; else if (!0 === i.options.centerMode) s = i.slideCount; else if (i.options.asNavFor) for (; e < i.slideCount;)++s, e = t + i.options.slidesToScroll, t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow; else s = 1 + Math.ceil((i.slideCount - i.options.slidesToShow) / i.options.slidesToScroll); return s - 1 }, r.prototype.getValueMargin = function () { var i = this.options.slidesMargin; return !0 === this.options.fade && (i = 0), i }, r.prototype.getLeft = function (i) { var e, t, s, o = this, n = 0, r = o.getValueMargin(), l = (o.listWidth - (o.options.slidesToShow - 1) * o.options.slidesMargin) / o.options.slidesToShow + o.options.slidesMargin, d = Math.abs(r / o.options.slidesToShow), a = o.$slides.first().outerHeight(!0); return o.slideOffset = -i * d, !0 === o.options.infinite ? (o.slideCount > o.options.slidesToShow && (o.slideOffset = -1 * (o.slideWidth * o.options.slidesToShow + r + i * d), s = -1, !0 === o.options.vertical && !0 === o.options.centerMode && (2 === o.options.slidesToShow ? s = -1.5 : 1 === o.options.slidesToShow && (s = -2)), n = a * o.options.slidesToShow * s), o.slideCount % o.options.slidesToScroll != 0 && i + o.options.slidesToScroll > o.slideCount && o.slideCount > o.options.slidesToShow && (n = i > o.slideCount ? (o.slideOffset = (o.options.slidesToShow - (i - o.slideCount)) * o.slideWidth * -1, (o.options.slidesToShow - (i - o.slideCount)) * a * -1) : (o.slideOffset = -1 * (o.slideCount % o.options.slidesToScroll * o.slideWidth + o.slideWidth / 2 + o.options.valueMargin / 2), o.slideCount % o.options.slidesToScroll * a * -1))) : i + o.options.slidesToShow > o.slideCount && 1 === o.options.slidesToScroll && (o.slideOffset = (i + o.options.slidesToShow - o.slideCount) * o.slideWidth - d, n = (i + o.options.slidesToShow - o.slideCount) * a), o.slideCount <= o.options.slidesToShow && (n = o.slideOffset = 0), !0 === o.options.centerMode && o.slideCount > o.options.slidesToShow && (!0 === o.options.centerMode && !0 === o.options.infinite ? 2 === o.options.slidesToShow ? o.slideOffset -= l * Math.abs(.5) : o.slideOffset += l * Math.abs((o.options.slidesToShow - 3) / 2) : !0 === o.options.centerMode && (o.slideOffset += l * Math.abs((o.options.slidesToShow - 1) / 2))), t = !1 === o.options.vertical ? i * o.slideWidth * -1 + o.slideOffset : i * a * -1 + n, !0 === o.options.variableWidth && (e = o.slideCount <= o.options.slidesToShow || !1 === o.options.infinite ? o.$slideTrack.children(".slick-slide").eq(i) : o.$slideTrack.children(".slick-slide").eq(i + o.options.slidesToShow), t = !0 === o.options.rtl ? e[0] ? -1 * (o.$slideTrack.width() - e[0].offsetLeft - e.width()) : 0 : e[0] ? -1 * e[0].offsetLeft : 0, !0 === o.options.centerMode && (e = o.slideCount <= o.options.slidesToShow || !1 === o.options.infinite ? o.$slideTrack.children(".slick-slide").eq(i) : o.$slideTrack.children(".slick-slide").eq(i + o.options.slidesToShow + 1), t = !0 === o.options.rtl ? e[0] ? -1 * (o.$slideTrack.width() - e[0].offsetLeft - e.width()) : 0 : e[0] ? -1 * e[0].offsetLeft : 0, t += (o.$list.width() - e.outerWidth()) / 2)), t }, r.prototype.getOption = r.prototype.slickGetOption = function (i) { return this.options[i] }, r.prototype.getNavigableIndexes = function () { for (var i = this, e = 0, t = 0, s = [], o = !1 === i.options.infinite ? i.slideCount : (e = -1 * i.options.slideCount, t = -1 * i.options.slideCount, 2 * i.slideCount); e < o;)s.push(e), e = t + i.options.slidesToScroll, t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow; return s }, r.prototype.getSlick = function () { return this }, r.prototype.getSlideCount = function () { var i, e, t, s = this, o = !0 === s.options.centerMode ? s.slideWidth * Math.floor(s.options.slidesToShow / 2) : 0; return !0 === s.options.swipeToSlide ? (s.$slideTrack.find(".slick-slide").each(function (i, e) { return e.offsetLeft - o + a(e).outerWidth() / 2 > -1 * s.swipeLeft ? (t = e, !1) : void 0 }), i = Math.abs(a(t).data("slick-index") - s.currentSlide) || 1, (e = Math.abs(a(t).data("slick-index")) + 1) + i >= s.slideCount && !1 === s.options.infinite && !1 === s.options.centerMode && (i = Math.abs(s.slideCount - e) || 1), i) : s.options.slidesToScroll }, r.prototype.goTo = r.prototype.slickGoTo = function (i, e) { this.changeSlide({ data: { message: "index", index: parseInt(i) } }, e) }, r.prototype.init = function (i) { var e = this; a(e.$slider).hasClass("slick-initialized") || (a(e.$slider).addClass("slick-initialized"), e.buildRows(), e.buildOut(), e.setProps(), e.startLoad(), e.loadSlider(), e.initializeEvents(), e.updateArrows(), e.updateDots(), e.checkResponsive(!0), e.focusHandler()), i && e.$slider.trigger("init", [e]), !0 === e.options.accessibility && e.initADA(), e.options.autoplay && (e.paused = !1, e.autoPlay()) }, r.prototype.initADA = function () { var t = this, s = Math.ceil(t.slideCount / t.options.slidesToShow), o = t.getNavigableIndexes().filter(function (i) { return 0 <= i && i < t.slideCount }); t.$slides.add(t.$slideTrack.find(".slick-cloned")).attr({ "aria-hidden": "true", tabindex: "-1" }).find("a, input, button, select").attr({ tabindex: "-1" }), null !== t.$dots && (t.$slides.not(t.$slideTrack.find(".slick-cloned")).each(function (i) { var e = o.indexOf(i); a(this).attr({ role: "tabpanel", id: "slick-slide" + t.instanceUid + i, tabindex: -1 }), -1 !== e && a(this).attr({ "aria-describedby": "slick-slide-control" + t.instanceUid + e }) }), t.$dots.attr("role", "tablist").find("li").each(function (i) { var e = o[i]; a(this).attr({ role: "presentation" }), a(this).find("button").first().attr({ role: "tab", id: "slick-slide-control" + t.instanceUid + i, "aria-controls": "slick-slide" + t.instanceUid + e, "aria-label": i + 1 + " of " + s, "aria-selected": null, tabindex: "-1" }) }).eq(t.currentSlide).find("button").attr({ "aria-selected": "true", tabindex: "0" }).end()); for (var i = t.currentSlide, e = i + t.options.slidesToShow; i < e; i++)t.$slides.eq(i).attr("tabindex", 0); t.activateADA() }, r.prototype.initArrowEvents = function () { var i = this; !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.off("click.slick").on("click.slick", { message: "previous" }, i.changeSlide), i.$nextArrow.off("click.slick").on("click.slick", { message: "next" }, i.changeSlide), !0 === i.options.accessibility && (i.$prevArrow.on("keydown.slick", i.keyHandler), i.$nextArrow.on("keydown.slick", i.keyHandler))) }, r.prototype.initDotEvents = function () { var i = this; !0 === i.options.dots && i.slideCount > i.options.slidesToShow && (a("li", i.$dots).on("click.slick", { message: "index" }, i.changeSlide), !0 === i.options.accessibility && i.$dots.on("keydown.slick", i.keyHandler)), !0 === i.options.dots && !0 === i.options.pauseOnDotsHover && a("li", i.$dots).on("mouseenter.slick", a.proxy(i.interrupt, i, !0)).on("mouseleave.slick", a.proxy(i.interrupt, i, !1)) }, r.prototype.initSlideEvents = function () { var i = this; i.options.pauseOnHover && (i.$list.on("mouseenter.slick", a.proxy(i.interrupt, i, !0)), i.$list.on("mouseleave.slick", a.proxy(i.interrupt, i, !1))) }, r.prototype.initializeEvents = function () { var i = this; i.initArrowEvents(), i.initDotEvents(), i.initSlideEvents(), i.$list.on("touchstart.slick mousedown.slick", { action: "start" }, i.swipeHandler), i.$list.on("touchmove.slick mousemove.slick", { action: "move" }, i.swipeHandler), i.$list.on("touchend.slick mouseup.slick", { action: "end" }, i.swipeHandler), i.$list.on("touchcancel.slick mouseleave.slick", { action: "end" }, i.swipeHandler), i.$list.on("click.slick", i.clickHandler), a(document).on(i.visibilityChange, a.proxy(i.visibility, i)), !0 === i.options.accessibility && i.$list.on("keydown.slick", i.keyHandler), !0 === i.options.focusOnSelect && a(i.$slideTrack).children().on("click.slick", i.selectHandler), a(window).on("orientationchange.slick.slick-" + i.instanceUid, a.proxy(i.orientationChange, i)), a(window).on("resize.slick.slick-" + i.instanceUid, a.proxy(i.resize, i)), a("[draggable!=true]", i.$slideTrack).on("dragstart", i.preventDefault), a(window).on("load.slick.slick-" + i.instanceUid, i.setPosition), a(i.setPosition) }, r.prototype.initUI = function () { var i = this; !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.show(), i.$nextArrow.show()), !0 === i.options.dots && i.slideCount > i.options.slidesToShow && i.$dots.show() }, r.prototype.keyHandler = function (i) { var e = this; i.target.tagName.match("TEXTAREA|INPUT|SELECT") || (37 === i.keyCode && !0 === e.options.accessibility ? e.changeSlide({ data: { message: !0 === e.options.rtl ? "next" : "previous" } }) : 39 === i.keyCode && !0 === e.options.accessibility && e.changeSlide({ data: { message: !0 === e.options.rtl ? "previous" : "next" } })) }, r.prototype.lazyLoad = function () { function i(i) { a("img[data-lazy]", i).each(function () { var i = a(this), e = a(this).attr("data-lazy"), t = a(this).attr("data-srcset"), s = a(this).attr("data-sizes") || n.$slider.attr("data-sizes"), o = document.createElement("img"); o.onload = function () { i.animate({ opacity: 0 }, 100, function () { t && (i.attr("srcset", t), s && i.attr("sizes", s)), i.attr("src", e).animate({ opacity: 1 }, 200, function () { i.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading") }), n.$slider.trigger("lazyLoaded", [n, i, e]) }) }, o.onerror = function () { i.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), n.$slider.trigger("lazyLoadError", [n, i, e]) }, o.src = e }) } var e, t, s, n = this; if (!0 === n.options.centerMode ? s = !0 === n.options.infinite ? (t = n.currentSlide + (n.options.slidesToShow / 2 + 1)) + n.options.slidesToShow + 2 : (t = Math.max(0, n.currentSlide - (n.options.slidesToShow / 2 + 1)), n.options.slidesToShow / 2 + 1 + 2 + n.currentSlide) : (t = n.options.infinite ? n.options.slidesToShow + n.currentSlide : n.currentSlide, s = Math.ceil(t + n.options.slidesToShow), !0 === n.options.fade && (0 < t && t-- , s <= n.slideCount && s++)), e = n.$slider.find(".slick-slide").slice(t, s), "anticipated" === n.options.lazyLoad) for (var o = t - 1, r = s, l = n.$slider.find(".slick-slide"), d = 0; d < n.options.slidesToScroll; d++)o < 0 && (o = n.slideCount - 1), e = (e = e.add(l.eq(o))).add(l.eq(r)), o-- , r++; i(e), n.slideCount <= n.options.slidesToShow ? i(n.$slider.find(".slick-slide")) : n.currentSlide >= n.slideCount - n.options.slidesToShow ? i(n.$slider.find(".slick-cloned").slice(0, n.options.slidesToShow)) : 0 === n.currentSlide && i(n.$slider.find(".slick-cloned").slice(-1 * n.options.slidesToShow)) }, r.prototype.loadSlider = function () { var i = this; i.setPosition(), i.$slideTrack.css({ opacity: 1 }), i.$slider.removeClass("slick-loading"), i.initUI(), "progressive" === i.options.lazyLoad && i.progressiveLazyLoad() }, r.prototype.next = r.prototype.slickNext = function () { this.changeSlide({ data: { message: "next" } }) }, r.prototype.orientationChange = function () { this.checkResponsive(), this.setPosition() }, r.prototype.pause = r.prototype.slickPause = function () { this.autoPlayClear(), this.paused = !0 }, r.prototype.play = r.prototype.slickPlay = function () { var i = this; i.autoPlay(), i.options.autoplay = !0, i.paused = !1, i.focussed = !1, i.interrupted = !1 }, r.prototype.postSlide = function (i) { var e, t, s, o, n, r = this, l = r.$slider.parent(), o = ((s - t) / 2 + .02 * s).toString() + "px"; r.$list.width(); void 0 !== l && -1 < l.attr("class").indexOf("slider_OuterBody") && $(".container").width(), !r.unslicked && (r.$slider.trigger("afterChange", [r, i]), r.animating = !1, r.slideCount > r.options.slidesToShow && r.setPosition(), r.swipeLeft = null, r.options.autoplay && r.autoPlay(), !0 === r.options.accessibility && (r.initADA(), r.options.focusOnChange)) && a(r.$slides.get(r.currentSlide)).attr("tabindex", 0).focus(), void 0 !== l && -1 < l.attr("class").indexOf("slider_OuterBody") && (void 0 !== (e = $(".slider_OuterBody ul ")) && (t = parseInt($(".container").width()), s = parseInt($(window).width()), n = o = "", void 0 !== t && void 0 !== s && 50 < t ? (n = (-1 * ((s - t) / 2 + .03 * s)).toString() + "px", o = ((s - t) / 2 + .025 * s).toString() + "px", $(e).find(".slick-list.draggable").delay(0).queue(function (i) { $(this).css("margin-left", n).css("width", $(window).width() + 20 + "px"), $(this).css("padding-left", o), i() })) : $(e).find(".slick-list.draggable").delay(0).queue(function (i) { $(this).css("padding-left", "0").css("margin-left", "0").css("width", "unset"), i() }))) }, r.prototype.prev = r.prototype.slickPrev = function () { this.changeSlide({ data: { message: "previous" } }) }, r.prototype.preventDefault = function (i) { i.preventDefault() }, r.prototype.progressiveLazyLoad = function (i) { i = i || 1; var e, t, s, o, n, r = this, l = a("img[data-lazy]", r.$slider); l.length ? (e = l.first(), t = e.attr("data-lazy"), s = e.attr("data-srcset"), o = e.attr("data-sizes") || r.$slider.attr("data-sizes"), (n = document.createElement("img")).onload = function () { s && (e.attr("srcset", s), o && e.attr("sizes", o)), e.attr("src", t).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"), !0 === r.options.adaptiveHeight && r.setPosition(), r.$slider.trigger("lazyLoaded", [r, e, t]), r.progressiveLazyLoad() }, n.onerror = function () { i < 3 ? setTimeout(function () { r.progressiveLazyLoad(i + 1) }, 500) : (e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), r.$slider.trigger("lazyLoadError", [r, e, t]), r.progressiveLazyLoad()) }, n.src = t) : r.$slider.trigger("allImagesLoaded", [r]) }, r.prototype.refresh = function (i) { var e, t = this, s = t.slideCount - t.options.slidesToShow; !t.options.infinite && t.currentSlide > s && (t.currentSlide = s), t.slideCount <= t.options.slidesToShow && (t.currentSlide = 0), e = t.currentSlide, t.destroy(!0), a.extend(t, t.initials, { currentSlide: e }), t.init(), i || t.changeSlide({ data: { message: "index", index: e } }, !1) }, r.prototype.registerBreakpoints = function () { var i, e, t, s = this, o = s.options.responsive || null; if ("array" === a.type(o) && o.length) { for (i in s.respondTo = s.options.respondTo || "window", o) if (t = s.breakpoints.length - 1, o.hasOwnProperty(i)) { for (e = o[i].breakpoint; 0 <= t;)s.breakpoints[t] && s.breakpoints[t] === e && s.breakpoints.splice(t, 1), t--; s.breakpoints.push(e), s.breakpointSettings[e] = o[i].settings } s.breakpoints.sort(function (i, e) { return s.options.mobileFirst ? i - e : e - i }) } }, r.prototype.reinit = function () { var i = this; i.$slides = i.$slideTrack.children(i.options.slide).addClass("slick-slide"), i.slideCount = i.$slides.length, i.currentSlide >= i.slideCount && 0 !== i.currentSlide && (i.currentSlide = i.currentSlide - i.options.slidesToScroll), i.slideCount <= i.options.slidesToShow && (i.currentSlide = 0), i.registerBreakpoints(), i.setProps(), i.setupInfinite(), i.buildArrows(), i.updateArrows(), i.initArrowEvents(), i.buildDots(), i.updateDots(), i.initDotEvents(), i.cleanUpSlideEvents(), i.initSlideEvents(), i.checkResponsive(!1, !0), !0 === i.options.focusOnSelect && a(i.$slideTrack).children().on("click.slick", i.selectHandler), i.setSlideClasses("number" == typeof i.currentSlide ? i.currentSlide : 0), i.setPosition(), i.focusHandler(), i.paused = !i.options.autoplay, i.autoPlay(), i.$slider.trigger("reInit", [i]) }, r.prototype.resize = function () { var i = this; a(window).width() !== i.windowWidth && (clearTimeout(i.windowDelay), i.windowDelay = window.setTimeout(function () { i.windowWidth = a(window).width(), i.checkResponsive(), i.unslicked || i.setPosition() }, 50)) }, r.prototype.removeSlide = r.prototype.slickRemove = function (i, e, t) { var s = this; return i = "boolean" == typeof i ? !0 === (e = i) ? 0 : s.slideCount - 1 : !0 === e ? --i : i, !(s.slideCount < 1 || i < 0 || i > s.slideCount - 1) && (s.unload(), !0 === t ? s.$slideTrack.children().remove() : s.$slideTrack.children(this.options.slide).eq(i).remove(), s.$slides = s.$slideTrack.children(this.options.slide), s.$slideTrack.children(this.options.slide).detach(), s.$slideTrack.append(s.$slides), s.$slidesCache = s.$slides, void s.reinit()) }, r.prototype.setCSS = function (i) { var e, t, s = this, o = {}; !0 === s.options.rtl && !1 === s.options.vertical && (i = -i), e = "left" == s.positionProp ? Math.ceil(i) + "px" : "0px", t = "top" == s.positionProp ? Math.ceil(i) + "px" : "0px", o[s.positionProp] = i, !1 === s.transformsEnabled || (!(o = {}) === s.cssTransitions ? o[s.animType] = "translate(" + e + ", " + t + ")" : o[s.animType] = "translate3d(" + e + ", " + t + ", 0px)"), s.$slideTrack.css(o) }, r.prototype.setDimensions = function () { var i, e, t = this, s = 0, o = t.$slider.parent(), n = t.$list.width(); void 0 !== o && -1 < o.attr("class").indexOf("slider_OuterBody") && 0 < $(".container").width() && (n = $(".container").width() - 40), e = t.getValueMargin(), i = t.options.slidesMargin * t.$slideTrack.children(".slick-slide").length, !1 === t.options.vertical ? !0 === t.options.centerMode && t.$list.css({ padding: "0px " + t.options.centerPadding }) : (t.$list.height(t.$slides.first().outerHeight(!0) * t.options.slidesToShow - e), !0 === t.options.centerMode && t.$list.css({ padding: t.options.centerPadding + " 0px" })), t.listWidth = n, t.listHeight = t.$list.height(), !1 === t.options.vertical && !1 === t.options.variableWidth ? (s = Math.abs(e / t.options.slidesToShow), t.slideWidth = Math.abs(t.listWidth / t.options.slidesToShow), t.$slideTrack.width(Math.abs(t.slideWidth * t.$slideTrack.children(".slick-slide").length) + i)) : !0 === t.options.variableWidth ? t.$slideTrack.width(5e3 * t.slideCount) : (t.slideWidth = Math.round(t.listWidth), t.$slideTrack.height(Math.floor(t.$slides.first().outerHeight(!0) * t.$slideTrack.children(".slick-slide").length))); var r, l, d, a, c, p = t.$slides.first().outerWidth(!0) - t.$slides.first().width(); !1 === t.options.variableWidth && t.$slideTrack.children(".slick-slide").width(t.slideWidth - p + s), void 0 !== o && -1 < o.attr("class").indexOf("slider_OuterBody") && (void 0 !== (r = $(".slider_OuterBody ul ")) && (l = parseInt($(".container").width()), d = parseInt($(window).width()), c = a = "", void 0 !== l && void 0 !== d && 50 < l ? (c = (-1 * ((d - l) / 2 + .03 * d)).toString() + "px", a = ((d - l) / 2 + .025 * d).toString() + "px", $(r).find(".slick-list.draggable").delay(0).queue(function (i) { $(this).css("margin-left", c), $(this).css("padding-left", a), i() })) : $(r).find(".slick-list.draggable").delay(0).queue(function (i) { $(this).css("padding-left", "0").css("margin-left", "0").css("width", "unset"), i() }))) }, r.prototype.setFade = function () { var t, s = this; s.$slides.each(function (i, e) { t = s.slideWidth * i * -1, !0 === s.options.rtl ? a(e).css({ position: "relative", right: t, top: 0, zIndex: s.options.zIndex - 2, opacity: 0 }) : a(e).css({ position: "relative", left: t, top: 0, zIndex: s.options.zIndex - 2, opacity: 0 }) }), s.$slides.eq(s.currentSlide).css({ zIndex: s.options.zIndex - 1, opacity: 1 }) }, r.prototype.setHeight = function () { var i, e = this; 1 === e.options.slidesToShow && !0 === e.options.adaptiveHeight && !1 === e.options.vertical && (i = e.$slides.eq(e.currentSlide).outerHeight(!0), e.$list.css("height", i)) }, r.prototype.setOption = r.prototype.slickSetOption = function () { var i, e, t, s, o, n = this, r = !1; if ("object" === a.type(arguments[0]) ? (t = arguments[0], r = arguments[1], o = "multiple") : "string" === a.type(arguments[0]) && (s = arguments[1], r = arguments[2], "responsive" === (t = arguments[0]) && "array" === a.type(arguments[1]) ? o = "responsive" : void 0 !== arguments[1] && (o = "single")), "single" === o) n.options[t] = s; else if ("multiple" === o) a.each(t, function (i, e) { n.options[i] = e }); else if ("responsive" === o) for (e in s) if ("array" !== a.type(n.options.responsive)) n.options.responsive = [s[e]]; else { for (i = n.options.responsive.length - 1; 0 <= i;)n.options.responsive[i].breakpoint === s[e].breakpoint && n.options.responsive.splice(i, 1), i--; n.options.responsive.push(s[e]) } r && (n.unload(), n.reinit()) }, r.prototype.setPosition = function () { var i = this; i.setDimensions(), i.setHeight(), !1 === i.options.fade ? i.setCSS(i.getLeft(i.currentSlide)) : i.setFade(), i.$slider.trigger("setPosition", [i]) }, r.prototype.setProps = function () { var i = this, e = document.body.style; i.positionProp = !0 === i.options.vertical ? "top" : "left", "top" === i.positionProp ? i.$slider.addClass("slick-vertical") : i.$slider.removeClass("slick-vertical"), void 0 === e.WebkitTransition && void 0 === e.MozTransition && void 0 === e.msTransition || !0 !== i.options.useCSS || (i.cssTransitions = !0), i.options.fade && ("number" == typeof i.options.zIndex ? i.options.zIndex < 3 && (i.options.zIndex = 3) : i.options.zIndex = i.defaults.zIndex), void 0 !== e.OTransform && (i.animType = "OTransform", i.transformType = "-o-transform", i.transitionType = "OTransition", void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)), void 0 !== e.MozTransform && (i.animType = "MozTransform", i.transformType = "-moz-transform", i.transitionType = "MozTransition", void 0 === e.perspectiveProperty && void 0 === e.MozPerspective && (i.animType = !1)), void 0 !== e.webkitTransform && (i.animType = "webkitTransform", i.transformType = "-webkit-transform", i.transitionType = "webkitTransition", void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)), void 0 !== e.msTransform && (i.animType = "msTransform", i.transformType = "-ms-transform", i.transitionType = "msTransition", void 0 === e.msTransform && (i.animType = !1)), void 0 !== e.transform && !1 !== i.animType && (i.animType = "transform", i.transformType = "transform", i.transitionType = "transition"), i.transformsEnabled = i.options.useTransform && null !== i.animType && !1 !== i.animType }, r.prototype.setSlideClasses = function (i) { var e, t, s, o, n, r = this, l = "right"; !0 === r.options.rtl && (l = "left"), !0 === r.options.vertical && (l = "bottom"), r.$slider.children().children(".slick-track").children().css("margin-" + l, r.options.slidesMargin + "px"), e = r.$slider.children().children(".slick-track").children().removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true"), r.$slides.eq(i).addClass("slick-current"), !0 === r.options.centerMode ? (o = r.options.slidesToShow % 2 == 0 ? 1 : 0, n = Math.floor(r.options.slidesToShow / 2), !0 === r.options.infinite && (n <= i && i <= r.slideCount - 1 - n ? r.$slides.slice(i - n + o, i + n + 1).addClass("slick-active").attr("aria-hidden", "false") : (t = r.options.slidesToShow + i, e.slice(t - n + 1 + o, t + n + 2).addClass("slick-active").attr("aria-hidden", "false")), 0 === i ? e.eq(e.length - 1 - r.options.slidesToShow).addClass("slick-center") : i === r.slideCount - 1 && e.eq(r.options.slidesToShow).addClass("slick-center")), r.$slides.eq(i).addClass("slick-center")) : 0 <= i && i <= r.slideCount - r.options.slidesToShow ? r.$slides.slice(i, i + r.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : e.length <= r.options.slidesToShow ? e.addClass("slick-active").attr("aria-hidden", "false") : (s = r.slideCount % r.options.slidesToShow, t = !0 === r.options.infinite ? r.options.slidesToShow + i : i, r.options.slidesToShow == r.options.slidesToScroll && r.slideCount - i < r.options.slidesToShow ? e.slice(t - (r.options.slidesToShow - s), t + s).addClass("slick-active").attr("aria-hidden", "false") : e.slice(t, t + r.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false")), "ondemand" !== r.options.lazyLoad && "anticipated" !== r.options.lazyLoad || r.lazyLoad(), r.$slider.find(".slick-active:first").addClass("first-slick").siblings().removeClass("first-slick"), r.$slider.find(".slick-active:last").addClass("last-slick").siblings().removeClass("last-slick") }, r.prototype.setupInfinite = function () { var i, e, t, s = this; if (!0 === s.options.fade && (s.options.centerMode = !1), !0 === s.options.infinite && !1 === s.options.fade && (e = null, s.slideCount > s.options.slidesToShow)) { for (t = !0 === s.options.centerMode ? s.options.slidesToShow + 1 : s.options.slidesToShow, i = s.slideCount; i > s.slideCount - t; --i)e = i - 1, a(s.$slides[e]).clone(!0).attr("id", "").attr("data-slick-index", e - s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned"); for (i = 0; i < t + s.slideCount; i += 1)e = i, a(s.$slides[e]).clone(!0).attr("id", "").attr("data-slick-index", e + s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned"); s.$slideTrack.find(".slick-cloned").find("[id]").each(function () { a(this).attr("id", "") }) } }, r.prototype.interrupt = function (i) { i || this.autoPlay(), this.interrupted = i }, r.prototype.selectHandler = function (i) { var e = a(i.target).is(".slick-slide") ? a(i.target) : a(i.target).parents(".slick-slide"), t = (t = parseInt(e.attr("data-slick-index"))) || 0; return this.slideCount <= this.options.slidesToShow ? void this.slideHandler(t, !1, !0) : void this.slideHandler(t) }, r.prototype.slideHandler = function (i, e, t) { var s, o, n, r, l, d = null, a = this; return e = e || !1, !0 === a.animating && !0 === a.options.waitForAnimate || !0 === a.options.fade && a.currentSlide === i ? void 0 : (!1 === e && a.asNavFor(i), s = i, d = a.getLeft(s), r = a.getLeft(a.currentSlide), a.currentLeft = null === a.swipeLeft ? r : a.swipeLeft, !1 === a.options.infinite && !1 === a.options.centerMode && (i < 0 || i > a.getDotCount() * a.options.slidesToScroll) || !1 === a.options.infinite && !0 === a.options.centerMode && (i < 0 || i > a.slideCount - a.options.slidesToScroll) ? void (!1 === a.options.fade && (s = a.currentSlide, !0 !== t ? a.animateSlide(r, function () { a.postSlide(s) }) : a.postSlide(s))) : (a.options.autoplay && clearInterval(a.autoPlayTimer), o = s < 0 ? a.slideCount % a.options.slidesToScroll != 0 ? a.slideCount - a.slideCount % a.options.slidesToScroll : a.slideCount + s : s >= a.slideCount ? a.slideCount % a.options.slidesToScroll != 0 ? 0 : s - a.slideCount : s, a.animating = !0, a.$slider.trigger("beforeChange", [a, a.currentSlide, o]), n = a.currentSlide, a.currentSlide = o, a.setSlideClasses(a.currentSlide), a.options.asNavFor && ((l = (l = a.getNavTarget()).slick("getSlick")).slideCount <= l.options.slidesToShow && l.setSlideClasses(a.currentSlide)), a.updateDots(), a.updateArrows(), !0 === a.options.fade ? (!0 !== t ? (a.fadeSlideOut(n), a.fadeSlide(o, function () { a.postSlide(o) })) : a.postSlide(o), void a.animateHeight()) : void (!0 !== t ? a.animateSlide(d, function () { a.postSlide(o) }) : a.postSlide(o)))) }, r.prototype.startLoad = function () { var i = this; !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.hide(), i.$nextArrow.hide()), !0 === i.options.dots && i.slideCount > i.options.slidesToShow && i.$dots.hide(), i.$slider.addClass("slick-loading") }, r.prototype.swipeDirection = function () { var i = this, e = i.touchObject.startX - i.touchObject.curX, t = i.touchObject.startY - i.touchObject.curY, s = Math.atan2(t, e), o = Math.round(180 * s / Math.PI); return o < 0 && (o = 360 - Math.abs(o)), o <= 45 && 0 <= o || o <= 360 && 315 <= o ? !1 === i.options.rtl ? "left" : "right" : 135 <= o && o <= 225 ? !1 === i.options.rtl ? "right" : "left" : !0 === i.options.verticalSwiping ? 35 <= o && o <= 135 ? "down" : "up" : "vertical" }, r.prototype.swipeEnd = function (i) { var e, t, s = this; if (s.dragging = !1, s.swiping = !1, s.scrolling) return s.scrolling = !1; if (s.interrupted = !1, s.shouldClick = !(10 < s.touchObject.swipeLength), void 0 === s.touchObject.curX) return !1; if (!0 === s.touchObject.edgeHit && s.$slider.trigger("edge", [s, s.swipeDirection()]), s.touchObject.swipeLength >= s.touchObject.minSwipe) { switch (t = s.swipeDirection()) { case "left": case "down": e = s.options.swipeToSlide ? s.checkNavigable(s.currentSlide + s.getSlideCount()) : s.currentSlide + s.getSlideCount(), s.currentDirection = 0; break; case "right": case "up": e = s.options.swipeToSlide ? s.checkNavigable(s.currentSlide - s.getSlideCount()) : s.currentSlide - s.getSlideCount(), s.currentDirection = 1 }"vertical" != t && (s.slideHandler(e), s.touchObject = {}, s.$slider.trigger("swipe", [s, t])) } else s.touchObject.startX !== s.touchObject.curX && (s.slideHandler(s.currentSlide), s.touchObject = {}); var o, n, r, l, d, a = s.$slider.parent(); s.$list.width(); void 0 !== a && -1 < a.attr("class").indexOf("slider_OuterBody") && $(".container").width(), void 0 !== a && -1 < a.attr("class").indexOf("slider_OuterBody") && (void 0 !== (o = $(".slider_OuterBody ul ")) && (n = parseInt($(".container").width()), r = parseInt($(window).width()), d = l = "", void 0 !== n && void 0 !== r && 50 < n ? (d = (-1 * ((r - n) / 2 + .03 * r)).toString() + "px", l = ((r - n) / 2 + .025 * r).toString() + "px", $(o).find(".slick-list.draggable").delay(700).queue(function (i) { $(this).css("margin-left", d).css("width", $(window).width() + 20 + "px"), $(this).css("padding-left", l), i() })) : $(o).find(".slick-list.draggable").delay(700).queue(function (i) { $(this).css("padding-left", "0").css("margin-left", "0").css("width", "unset"), i() }))) }, r.prototype.swipeHandler = function (i) { var e = this; if (!(!1 === e.options.swipe || "ontouchend" in document && !1 === e.options.swipe || !1 === e.options.draggable && -1 !== i.type.indexOf("mouse"))) switch (e.touchObject.fingerCount = i.originalEvent && void 0 !== i.originalEvent.touches ? i.originalEvent.touches.length : 1, e.touchObject.minSwipe = e.listWidth / e.options.touchThreshold, !0 === e.options.verticalSwiping && (e.touchObject.minSwipe = e.listHeight / e.options.touchThreshold), i.data.action) { case "start": e.swipeStart(i); break; case "move": e.swipeMove(i); break; case "end": e.swipeEnd(i) } }, r.prototype.swipeMove = function (i) { var e, t, s, o, n, r = this, l = void 0 !== i.originalEvent ? i.originalEvent.touches : null; return !(!r.dragging || r.scrolling || l && 1 !== l.length) && (e = r.getLeft(r.currentSlide), r.touchObject.curX = void 0 !== l ? l[0].pageX : i.clientX, r.touchObject.curY = void 0 !== l ? l[0].pageY : i.clientY, r.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(r.touchObject.curX - r.touchObject.startX, 2))), n = Math.round(Math.sqrt(Math.pow(r.touchObject.curY - r.touchObject.startY, 2))), !r.options.verticalSwiping && !r.swiping && 4 < n ? !(r.scrolling = !0) : (!0 === r.options.verticalSwiping && (r.touchObject.swipeLength = n), t = r.swipeDirection(), void 0 !== i.originalEvent && 4 < r.touchObject.swipeLength && (r.swiping = !0, i.preventDefault()), o = (!1 === r.options.rtl ? 1 : -1) * (r.touchObject.curX > r.touchObject.startX ? 1 : -1), !0 === r.options.verticalSwiping && (o = r.touchObject.curY > r.touchObject.startY ? 1 : -1), s = r.touchObject.swipeLength, (r.touchObject.edgeHit = !1) === r.options.infinite && (0 === r.currentSlide && "right" === t || r.currentSlide >= r.getDotCount() && "left" === t) && (s = r.touchObject.swipeLength * r.options.edgeFriction, r.touchObject.edgeHit = !0), !1 === r.options.vertical ? r.swipeLeft = e + s * o : r.swipeLeft = e + s * (r.$list.height() / r.listWidth) * o, !0 === r.options.verticalSwiping && (r.swipeLeft = e + s * o), !0 !== r.options.fade && !1 !== r.options.touchMove && (!0 === r.animating ? (r.swipeLeft = null, !1) : void r.setCSS(r.swipeLeft)))) }, r.prototype.swipeStart = function (i) { var e, t = this; return t.interrupted = !0, 1 !== t.touchObject.fingerCount || t.slideCount <= t.options.slidesToShow ? !(t.touchObject = {}) : (void 0 !== i.originalEvent && void 0 !== i.originalEvent.touches && (e = i.originalEvent.touches[0]), t.touchObject.startX = t.touchObject.curX = void 0 !== e ? e.pageX : i.clientX, t.touchObject.startY = t.touchObject.curY = void 0 !== e ? e.pageY : i.clientY, void (t.dragging = !0)) }, r.prototype.unfilterSlides = r.prototype.slickUnfilter = function () { var i = this; null !== i.$slidesCache && (i.unload(), i.$slideTrack.children(this.options.slide).detach(), i.$slidesCache.appendTo(i.$slideTrack), i.reinit()) }, r.prototype.unload = function () { var i = this; a(".slick-cloned", i.$slider).remove(), i.$dots && i.$dots.remove(), i.$prevArrow && i.htmlExpr.test(i.options.prevArrow) && i.$prevArrow.remove(), i.$nextArrow && i.htmlExpr.test(i.options.nextArrow) && i.$nextArrow.remove(), i.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "") }, r.prototype.unslick = function (i) { this.$slider.trigger("unslick", [this, i]), this.destroy() }, r.prototype.updateArrows = function () { var i = this; Math.floor(i.options.slidesToShow / 2); !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && !i.options.infinite && (i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 0 === i.currentSlide ? (i.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"), i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : (i.currentSlide >= i.slideCount - i.options.slidesToShow && !1 === i.options.centerMode || i.currentSlide >= i.slideCount - 1 && !0 === i.options.centerMode) && (i.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"))) }, r.prototype.updateDots = function () { var i = this; null !== i.$dots && (i.$dots.find("li").removeClass("slick-active").end(), i.$dots.find("li").eq(Math.floor(i.currentSlide / i.options.slidesToScroll)).addClass("slick-active")) }, r.prototype.visibility = function () { this.options.autoplay && (document[this.hidden] ? this.interrupted = !0 : this.interrupted = !1) }, a.fn.slick = function () { for (var i, e = this, t = arguments[0], s = Array.prototype.slice.call(arguments, 1), o = e.length, n = 0; n < o; n++)if ("object" == typeof t || void 0 === t ? e[n].slick = new r(e[n], t) : i = e[n].slick[t].apply(e[n].slick, s), void 0 !== i) return i; return e } });